variables:
  GRADLE_USER_HOME: $CI_PROJECT_DIR/.cache/gradle
  PIP_CACHE_DIR: $CI_PROJECT_DIR/.cache/pip
  PRE_COMMIT_HOME: $CI_PROJECT_DIR/.cache/pre-commit
  PYTHONUSERBASE: $CI_PROJECT_DIR/.cache/python-user-packages
cache:
  key: $CI_JOB_NAME
  paths:
    - $CI_PROJECT_DIR/.tox
    - $CI_PROJECT_DIR/.venv  # for poetry
    - $GRADLE_USER_HOME/caches
    - $GRADLE_USER_HOME/wrapper
    - $PIP_CACHE_DIR
    - $PRE_COMMIT_HOME
    - $PYTHONUSERBASE

.lint:
  before_script:
    - python -V
    - export PATH="$PATH:$PYTHONUSERBASE/bin"
    - pip install --user gitlint pre-commit tox
  script:
    - gitlint
    - pre-commit run --all-files
    - tox -e lint

.test:
  before_script:
    - git submodule update --init --recursive
    - apt-get update
    - apt-get install -qy default-jdk-headless
    - python -V
    - export PATH="$PATH:$PYTHONUSERBASE/bin"
    - pip install --user tox
  artifacts:
    paths:
      - htmlcov
    expire_in: 1 week

lint37:
  extends: .lint
  image: python:3.7

lint38:
  extends: .lint
  image: python:3.8

py37:
  extends: .test
  image: python:3.7
  script: tox -e py37

py38:
  extends: .test
  image: python:3.8
  script: tox -e py38

doc:
  extends: .test
  image: python:3.8
  script: tox -e doc
  artifacts:
    paths:
      - docs/_build/html
    expire_in: 1 week

readme_dev:
# Test the code in "Development" in README.rst.
  image: python:latest
  before_script:
    - apt-get update
    - apt-get install -qy default-jdk-headless
    - python -V
    - export PATH="$PATH:$PYTHONUSERBASE/bin"
    - pip install --user poetry
    - poetry --version
    - poetry config virtualenvs.in-project true
  script:
    - poetry install
    - poetry run pre-commit install
    - poetry run pre-commit install --hook-type commit-msg
    - git submodule update --init
    - poetry run invoke build
    - poetry run invoke fmt
    - poetry run invoke lint
    - poetry run invoke test
#   - poetry run invoke bench
    - poetry run invoke doc
    - poetry run invoke build-sdist
